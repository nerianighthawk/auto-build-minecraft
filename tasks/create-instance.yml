---
- name: Create ssh key
  openssh_keypair:
    path: "{{ ssh_key_dir }}{{ hostname }}"
- name: Slurp ssh public key
  slurp:
    src: "{{ ssh_key_dir }}{{ hostname }}.pub"
  register: public_key
- name: Create a disk
  gcp_compute_disk:
    name: "{{ hostname }}-disk"
    size_gb: 10
    source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts
    zone: "{{ zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    scopes:
      - https://www.googleapis.com/auth/compute
    state: present
  register: disk
- name: Create a address
  gcp_compute_address:
    name: '{{ hostname }}-address'
    region: "{{ region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    scopes:
      - https://www.googleapis.com/auth/compute
    state: present
  register: address
- name: Get info on a network
  gcp_compute_network_info:
    filters:
    - name = network
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
  register: network_info
- name: Create a instance
  gcp_compute_instance:
    state: present
    name: "{{ hostname }}"
    machine_type: e2-standard-2
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disk }}"
    metadata:
      ssh-keys: "{{ user_name }}:{{ public_key.content | b64decode }}"
    network_interfaces:
      - network: "{{ network_info.resources[0] }}"
        access_configs:
          - name: 'External NAT'
            nat_ip: "{{ address }}"
            type: 'ONE_TO_ONE_NAT'
    zone: "{{ zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    scopes:
      - https://www.googleapis.com/auth/compute
  register: instance
- name: Wait for SSH to come up
  wait_for: host={{ address.address }} port=22 delay=10 timeout=300
- name: Add instance to inventory
  add_host:
    hostname: "{{ hostname }}"
    ansible_host: "{{ address.address }}"
    ansible_user: "{{ user_name }}"
    ansible_ssh_private_key_file: "{{ ssh_key_dir }}{{ hostname }}"
    groups: server
